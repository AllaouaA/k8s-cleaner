apiVersion: v1
kind: Namespace
metadata:
  name: projectsveltos
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: pruners.apps.projectsveltos.io
spec:
  group: apps.projectsveltos.io
  names:
    kind: Pruner
    listKind: PrunerList
    plural: pruners
    singular: pruner
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Pruner is the Schema for the pruners API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PrunerSpec defines the desired state of Pruner
            properties:
              dryRune:
                default: false
                description: DryRun if set to true, will have controller delete no
                  resource. All matching resources will be listed in status section
                type: boolean
              schedule:
                description: Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                type: string
              staleResources:
                items:
                  properties:
                    action:
                      default: Delete
                      description: Action indicates the action to take. Default action
                        is to delete object. If set to transform, the transform function
                        will be invoked and then object will be updated.
                      enum:
                      - Delete
                      - Transform
                      type: string
                    evaluate:
                      description: Evaluate contains a function "evaluate" in lua
                        language. The function will be passed one of the object selected
                        based on above criteria. Must return struct with field "matching"
                        representing whether object is a match.
                      type: string
                    group:
                      description: Group of the resource deployed in the Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    namespace:
                      description: Namespace of the resource deployed in the  Cluster.
                        Empty for resources scoped at cluster level.
                      type: string
                    transform:
                      description: Transform contains a function "transform" in lua
                        language. When Action is set to *Transform*, this function
                        will be invoked and be passed one of the object selected based
                        on above criteria. Must the new object that will be applied
                      type: string
                    version:
                      description: Version of the resource deployed in the Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - version
                  type: object
                type: array
              startingDeadlineSeconds:
                description: Optional deadline in seconds for starting the job if
                  it misses scheduled time for any reason.  Missed jobs executions
                  will be counted as failed ones.
                format: int64
                type: integer
            required:
            - schedule
            - staleResources
            type: object
          status:
            description: PrunerStatus defines the observed state of Pruner
            properties:
              failureMessage:
                description: FailureMessage provides more information about the error,
                  if any occurred
                type: string
              lastRunTime:
                description: Information when was the last time a snapshot was successfully
                  scheduled.
                format: date-time
                type: string
              nextScheduleTime:
                description: Information when next snapshot is scheduled
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: k8s-pruner
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: k8s-pruner
  name: k8s-pruner-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-pruner-controller-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps.projectsveltos.io
  resources:
  - pruners
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.projectsveltos.io
  resources:
  - pruners/finalizers
  verbs:
  - update
- apiGroups:
  - apps.projectsveltos.io
  resources:
  - pruners/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-pruner
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: k8s-pruner
  name: k8s-pruner-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-pruner
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: k8s-pruner
  name: k8s-pruner-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: k8s-pruner
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: k8s-pruner
  name: k8s-pruner-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-pruner-controller-role
subjects:
- kind: ServiceAccount
  name: k8s-pruner-controller
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-pruner
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: k8s-pruner
  name: k8s-pruner-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-pruner-proxy-role
subjects:
- kind: ServiceAccount
  name: k8s-pruner-controller
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-pruner
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: k8s-pruner
    control-plane: k8s-pruner
  name: k8s-pruner-controller-metrics-service
  namespace: projectsveltos
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: k8s-pruner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: k8s-pruner
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: k8s-pruner
    control-plane: k8s-pruner
  name: k8s-pruner-controller
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: k8s-pruner
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: controller
      labels:
        control-plane: k8s-pruner
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        command:
        - /manager
        image: projectsveltos/k8s-pruner-amd64:main
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: controller
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: k8s-pruner-controller
      terminationGracePeriodSeconds: 10
